spring.application.name=notificationService
spring.kafka.bootstrap.servers=broker:29092
spring.kafka.consumer.group-id=notificationService
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.example.orderService.event.orderPlacedEvent
spring.kafka.consumer.auto-offset-reset=earliest


##spring.kafka.consumer.properties.spring.json.value.default.type=com.example.orderService.event.orderPlacedEvent


##Mail properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=hrushikshop@gmail.com
spring.mail.password=exip fbsx qnhg bety

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=notificationService
management.tracing.sampling.probability=1.0

logging.pattern.level=%5p [${spring.application.name:},traceId=%X{traceId},spanId=%X{spanId}]

server.port=8087